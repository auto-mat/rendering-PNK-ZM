<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE Map [
<!ENTITY % entities SYSTEM "../inc/entities.xml.inc">
<!ENTITY datasource-settings SYSTEM "../inc/datasource-settings-legend.xml.inc">
%entities;
%color-entities;
]>
<Map srs="&srs900913;" bgcolor="rgb(255,255,255)">
    &fontset-settings;

&height-styles;
&admin-styles;
<!--
&mtb-styles;
&kct-styles;
-->
&cycleways-styles;
&water-styles;
&placenames-styles;
&shapefiles-styles;
&highway-railway-styles;
&tracks-styles;
&amenity-poi-styles;
&text-styles;
&landuse-styles;

<!--<Layer name="world" status="on" srs="&srs900913;">
    <StyleName>world</StyleName>
    <Datasource>
      <Parameter name="type">shape</Parameter>
      <Parameter name="file">&shapefiles;/shoreline_300.shp</Parameter>
    </Datasource>
</Layer>-->

<!-- Lesy, hriste, skoly, vojenske prostory, kempy, vse jako polygon -->
<Layer name="leisure" srs="&srs900913;">
<StyleName>leisure</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,aeroway,amenity,landuse,leisure,man_made,military,"natural",power,tourism,name
       from planet_osm_polygon
       where landuse is not null
          or leisure is not null
          or aeroway in ('apron','aerodrome')
          or amenity in ('parking','university','college','school','hospital','kindergarten','grave_yard')
          or military in ('barracks','danger_area')
          or "natural" in ('field','beach','heath','mud','wood')
          or power in ('station','sub_station')
          or tourism in ('attraction','camp_site','caravan_site','picnic_site','zoo')
       order by z_order,way_area desc
      ) as leisure
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- stadiony -->
<Layer name="sports_grounds" srs="&srs900913;">
<StyleName>sports_grounds</StyleName>
    <Datasource>
      <Parameter name="table">(select way,leisure from planet_osm_polygon where leisure in ('sports_centre','stadium', 'pitch') order by z_order,way_area desc) as sports_grounds</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>

<!-- ledovce nejsou v CR potreba -->
<!--<Layer name="glaciers-text" srs="&srs900913;">
<StyleName>glaciers-text</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,name,way_area
      from planet_osm_polygon
      where "natural"='glacier'
      order by way_area desc
      ) as glaciers</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>-->
<!-- reky, potoky -->
<Layer name="water_lines" srs="&srs900913;">
<StyleName>water_lines_casing</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,waterway,disused,name,
      case when tunnel in ('yes','true','1') then 'yes'::text else tunnel end as tunnel
      from planet_osm_line
      where waterway in ('weir','river','canal','derelict_canal','stream','drain')
        and (bridge is null or bridge not in ('yes','true','1','aqueduct'))
      order by z_order
      ) as water_lines_casing</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- vodni plochy i vetsi reky, ktere jsou jako plochy ulozeny -->
<Layer name="water_areas" srs="&srs900913;">
<StyleName>water_areas</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,"natural",waterway,landuse,name,way_area
      from planet_osm_polygon
      where waterway in ('dock','mill_pond','riverbank','canal')
         or landuse in ('reservoir','water','basin')
         or "natural" in ('lake','water','land','marsh','wetland','glacier')
      order by z_order,way_area desc
      ) as water_areas</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="water_lines_fill" srs="&srs900913;">
<StyleName>water_lines_fill</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,waterway,disused,name,
      case when tunnel in ('yes','true','1') then 'yes'::text else tunnel end as tunnel
      from planet_osm_line
      where waterway in ('weir','river','canal','derelict_canal','stream','drain')
        and (bridge is null or bridge not in ('yes','true','1','aqueduct'))
      order by z_order
      ) as water_lines_fill</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>

<!-- popisy vodnich toku -->
<Layer name="water-lines-text" srs="&srs900913;">
    <StyleName>water-lines-text</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,waterway,
       case when short_name is not null then short_name else name end as name
      from planet_osm_line
      where waterway in ('river','canal','stream','drain')
      ) as water_lines_text
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>

<Layer name="water_areas_fill" srs="&srs900913;">
<StyleName>water_areas_fill</StyleName>
<StyleName>water_areas_fill_island</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,"natural",waterway,landuse,name
      from planet_osm_polygon
      where waterway in ('dock','mill_pond','riverbank','canal')
         or landuse in ('reservoir','water','basin')
         or "natural" in ('lake','water','land','marsh','scrub','wetland','glacier')
      order by z_order,way_area desc
      ) as water_areas_fill</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- hraze prehrad -->
<Layer name="dam" srs="&srs900913;">
<StyleName>dam</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,name from planet_osm_line where waterway='dam') as dam</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- molo jako polygon -->
<Layer name="piers-area" srs="&srs900913;">
<StyleName>piers-area</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way from planet_osm_polygon where man_made='pier') as piers
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- molo jako linie -->
<Layer name="piers" srs="&srs900913;">
<StyleName>piers</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way from planet_osm_line where man_made='pier') as piers
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- nektere budovy, dalsi se kresli pomoci ? -->
<Layer name="buildings" srs="&srs900913;">
<StyleName>buildings</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,building,leisure,railway,amenity,aeroway from planet_osm_polygon
       where building is not null
          or leisure in ('pitch','track')
          or railway='station'
          or amenity='place_of_worship'
          or aeroway='terminal'
       order by z_order,way_area desc) as buildings
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- tunely vsech cest naraz, okraje i vypln -->
<Layer name="tunnels" srs="&srs900913;">
<StyleName>tunnels-casing</StyleName>
<StyleName>tunnels-fill</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway,service from planet_osm_line where highway in ('motorway','motorway_link','trunk','trunk_link','primary','primary_link','secondary','secondary_link','tertiary','residential','unclassified','minor','service') and tunnel in ('yes','true','1') order by z_order) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- v CR mestske hradby nejsou otagovane -->
<!--<Layer name="citywalls" srs="&srs900913;">
<StyleName>citywalls</StyleName>
    <Datasource>
      <Parameter name="table">(select way from planet_osm_line where "historic"='citywalls') as citywalls</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>-->
<!-- mala tocna pro auta -->
<Layer name="turning_circle" srs="&srs900913;">
<StyleName>turning_circle</StyleName>
    <Datasource>
      <Parameter name="table">(select way from planet_osm_point where highway='turning_circle') as turning_circle</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- podchody pro chodce nebo cyklisty -->
<Layer name="footbikecycle-tunnels" srs="&srs900913;">
<StyleName>footbikecycle-tunnels</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway,foot,bicycle from planet_osm_line where highway in ('bridleway','footway','cycleway','path') and tunnel in ('yes','true','1') order by z_order) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- vsechny nezpevnene stezky, pesiny -->
<Layer name="tracks-notunnel-nobridge" srs="&srs900913;">
<StyleName>tracks-notunnel-nobridge</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,tracktype,bicycle from planet_osm_line where highway='track' and (bridge is null or bridge in ('no','false','0')) and (tunnel is null or tunnel in ('no','false','0')) and (bicycle is null or not (bicycle in ('yes', 'designated')))) as tracks
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- vsechny nezpevnene stezky, pesiny -->
<Layer name="tracks-notunnel-nobridge-bicycle" srs="&srs900913;">
<StyleName>tracks-notunnel-nobridge-bicycle</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,tracktype,bicycle from planet_osm_line where highway='track' and (bridge is null or bridge in ('no','false','0')) and (tunnel is null or tunnel in ('no','false','0')) and (bicycle in ('yes', 'designated'))) as tracks
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- stezky jako podchody pod necim -->
<Layer name="tracks-tunnels" srs="&srs900913;">
<StyleName>tracks-tunnels</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,tracktype from planet_osm_line where highway='track' and tunnel in ('yes','true','1') and (bicycle is null or not (bicycle in ('yes', 'designated')))) as tracks
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="tracks-tunnels-bicycle" srs="&srs900913;">
<StyleName>tracks-tunnels-bicycle</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,tracktype,bicycle from planet_osm_line where highway='track' and tunnel in ('yes','true','1') and (bicycle in ('yes', 'designated'))) as tracks
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>

<!-- utesy, bariery -->
<Layer name="line features" srs="&srs900913;">
<StyleName>cliffs</StyleName>
<StyleName>barriers</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,barrier,"natural",man_made from planet_osm_line where barrier is not null or "natural" in ('hedge','cliff') or man_made='embankment') as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>

<!-- ploty, zdi -->
<Layer name="polygon barriers" srs="&srs900913;">
<StyleName>barriers</StyleName>
    <Datasource>
      <Parameter name="table">
       (select way,barrier,"natural" from planet_osm_polygon where barrier is not null or "natural"='hedge') as barriers
       </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- spodni vrstva a nasledne okraje ruznych uzemi - obytne ctvrti, pesi zony atd. -->
<Layer name="highway-area-casing" srs="&srs900913;">
<StyleName>highway-area-casing</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway from planet_osm_polygon
       where highway in ('residential','unclassified','pedestrian','service','footway','track')
       order by z_order,way_area desc) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- spodni vrstva a nasledne okraje vsech cest -->
<Layer name="minor-roads-casing" srs="&srs900913;">
<StyleName>minor-roads-casing-links</StyleName>
<StyleName>minor-roads-casing</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway,service,bicycle,
       case when tunnel in ('yes','true','1') then 'yes'::text else tunnel end as tunnel
       from planet_osm_line
       where highway in ('motorway','motorway_link','trunk','trunk_link','primary','primary_link','secondary','secondary_link','tertiary','residential','unclassified','minor','road','service','pedestrian','raceway','living_street','cycleway', 'footway')
       order by z_order) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="tracks-nt-nb-casing" srs="&srs900913;">
<StyleName>tracks-nt-nb-casing</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,tracktype,bicycle from planet_osm_line where highway='track' and (bridge is null or bridge in ('no','false','0')) and (tunnel is null or tunnel in ('no','false','0'))) as tracks
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- VF: Posunuto pred vsechny ostatni fill, ktere se kresli na ni hlavne kvuli pesim zonam-->
<!-- vypln odpovidajicich uzemi -->
<Layer name="highway-area-fill" srs="&srs900913;">
<StyleName>highway-area-fill</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway, surface
       from planet_osm_polygon
       where highway in ('residential','unclassified','pedestrian','service','footway','living_street','track')
       order by z_order,way_area desc) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="bicycle-area-fill" srs="&srs900913;">
<StyleName>bicycle-area-fill</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway
      from planet_osm_polygon
      where
      ((highway in ('pedestrian') 
      or (motorcar in ('no', 'destination', 'permissive', 'private', 'forestry', 'delivery', 'agricultural'))
      or (motor_vehicle in ('no', 'destination', 'permissive', 'private', 'forestry', 'delivery', 'agricultural')))
      and (bicycle is null or bicycle not in ('no', '-1'))
      and (highway in ('residential', 'primary', 'primary_link', 'secondary', 'secondary_link', 'tertiary', 'tertiary_link')))

      or
      (bicycle = 'yes' and highway='pedestrian')

       order by z_order) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="highway-area-fill-cobblestone" srs="&srs900913;">
<StyleName>highway-area-fill-cobblestone</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway, surface
       from planet_osm_polygon
       order by z_order,way_area desc) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="tracks-notunnel-nobridge" srs="&srs900913;">
<StyleName>tracks-notunnel-nobridge</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,tracktype,bicycle from planet_osm_line where highway='track' and (bridge is null or bridge in ('no','false','0')) and (tunnel is null or tunnel in ('no','false','0')) and (bicycle is null or not (bicycle in ('yes', 'designated')))) as tracks
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- vsechny nezpevnene stezky, pesiny, cyklo -->
<Layer name="tracks-notunnel-nobridge-bicycle" srs="&srs900913;">
<StyleName>tracks-notunnel-nobridge-bicycle</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,tracktype,bicycle from planet_osm_line where highway='track' and (bridge is null or bridge in ('no','false','0')) and (tunnel is null or tunnel in ('no','false','0')) and (bicycle in ('yes', 'designated'))) as tracks
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- vypln vsech cest, koleji -->
<Layer name="minor-roads-fill" srs="&srs900913;">
<StyleName>minor-roads-fill-links</StyleName>
<StyleName>minor-roads-fill</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway,foot,construction,aeroway,service,electrified,
       case when bicycle in ('yes','designated','1') then 'yes'::text else bicycle end as bicycle,
       case when tunnel in ('yes','true','1') then 'yes'::text else tunnel end as tunnel,
       case when bridge in ('yes','true','1') then 'yes'::text else bridge end as bridge,
       case when railway in ('spur','siding')
              or (railway='rail' and service in ('spur','siding','yard'))
            then 'spur-siding-yard'::text else railway end as railway
       from planet_osm_line
       where highway is not null
          or aeroway in ('runway','taxiway')
          or railway in ('light_rail','narrow_gauge','funicular','rail','subway','tram','spur','siding','platform','disused','abandoned','construction')
       order by z_order) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="bicycle-roads-fill" srs="&srs900913;">
<StyleName>bicycle-roads-fill</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway
      from planet_osm_line
      where
      ((highway in ('pedestrian') 
      or (motorcar in ('no', 'destination', 'permissive', 'private', 'forestry', 'delivery', 'agricultural'))
      or (motor_vehicle in ('no', 'destination', 'permissive', 'private', 'forestry', 'delivery', 'agricultural')))
      and (bicycle is null or bicycle not in ('no', '-1'))
      and (highway in ('residential', 'primary', 'primary_link', 'secondary', 'secondary_link', 'tertiary', 'tertiary_link')))

      or
      (bicycle = 'yes' and highway='pedestrian')

       order by z_order) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- lanovky -->
<Layer name="aerialways" srs="&srs900913;">
<StyleName>aerialways</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,aerialway from planet_osm_line where aerialway is not null) as aerialways
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- cesty do zoomu 11; pomocne koleje, do tovaren, na nadrazich -->
<Layer name="roads" srs="&srs900913;">
<StyleName>roads</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway,service,electrified,
       case when tunnel in ('yes','true','1') then 'yes'::text else tunnel end as tunnel,
       case when railway in ('spur','siding')
              or (railway='rail' and service in ('spur','siding','yard'))
            then 'spur-siding-yard'::text else railway end as railway
       from planet_osm_roads
       where highway in ('motorway', 'trunk', 'primary', 'secondary', 'motorway_link', 'trunk_link', 'primary_link', 'secondary_link')
          or railway is not null
       order by z_order
      ) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="cycleway-fill" srs="&srs900913;">
<StyleName>cycleway-fill</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway,bicycle,foot,construction,aeroway,service,
       case when tunnel in ('yes','true','1') then 'yes'::text else tunnel end as tunnel,
       case when bridge in ('yes','true','1') then 'yes'::text else bridge end as bridge
       from planet_osm_line
       where highway is not null or bicycle='designated'
       order by z_order) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- neco jako mosty pro tekouci vodu, skoro se nevyskytuji -->
<Layer name="waterway-bridges" srs="&srs900913;">
<StyleName>waterway-bridges</StyleName>
    <Datasource>
      <Parameter name="table">(select way,name from planet_osm_line where waterway='canal' and bridge in ('yes','true','1','aqueduct') order by z_order) as water</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- mosty pro auta, lidi i vlaky -->
<Layer name="bridges" srs="&srs900913;">
<StyleName>road-bridges-casing</StyleName>
<StyleName>road-bridges-fill</StyleName>
<StyleName>noncased-ways-bridges_casing</StyleName>
<StyleName>primarybridge_layer0_casing</StyleName>
<StyleName>mwaybridge_layer0_casing</StyleName>
<StyleName>primarybridge_layer0_fill</StyleName>
<StyleName>mwaybridge_layer0_fill</StyleName>
<StyleName>primarybridge_layer1_casing</StyleName>
<StyleName>mwaybridge_layer1_casing</StyleName>
<StyleName>primarybridge_layer1_fill</StyleName>
<StyleName>mwaybridge_layer1_fill</StyleName>
<StyleName>noncased-ways-bridges_fill</StyleName>
<StyleName>primarybridge_layer2_casing</StyleName>
<StyleName>mwaybridge_layer2_casing</StyleName>
<StyleName>primarybridge_layer2_fill</StyleName>
<StyleName>mwaybridge_layer2_fill</StyleName>
<StyleName>mwaybridge_layer3_casing</StyleName>
<StyleName>mwaybridge_layer3_fill</StyleName>
<StyleName>mwaybridge_layer4_casing</StyleName>
<StyleName>mwaybridge_layer4_fill</StyleName>
<StyleName>mwaybridge_layer5_casing</StyleName>
<StyleName>mwaybridge_layer5_fill</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway,aeroway,railway,layer,bicycle,foot,bridge,tunnel
       from planet_osm_line
       where (highway is not null
              or aeroway in ('runway','taxiway')
              or railway in ('light_rail','subway'))
         and bridge not in ('no','false','0')
       order by z_order
      ) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- mostky na pesinach -->
<Layer name="tracks-bridges-bicycle" srs="&srs900913;">
<StyleName>tracks-bridges-bicycle</StyleName>
    <Datasource>
      <Parameter name="table">
         (select way,tracktype, bicycle from planet_osm_line where highway='track' and bridge in ('yes','true','1') and (bicycle in ('yes', 'designated'))) as tracks
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="tracks-bridges" srs="&srs900913;">
<StyleName>tracks-bridges</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,tracktype, bicycle from planet_osm_line where highway='track' and bridge in ('yes','true','1') and (bicycle is null or not (bicycle in ('yes', 'designated')))) as tracks
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="bicycle-lanes" srs="&srs900913;">
    <StyleName>cyclelane</StyleName>
    <Datasource>
        <Parameter name="table">
           (select way, cycleway, "cycleway:left", "cycleway:right",
          case when oneway in ('yes','true','1') then 'yes'::text else oneway end as oneway
           from planet_osm_line where (cycleway not in ('', 'no', 'opposite') or "cycleway:left" not in ('', 'no', 'opposite') or "cycleway:right" not in ('', 'no', 'opposite'))) as cyclelane
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>

<Layer name="surface-cobblestone" srs="&srs900913;">
    <StyleName>surface-cobblestone</StyleName>
    <Datasource>
        <Parameter name="table">
        (select way, highway, surface from planet_osm_line where surface='cobblestone') as surface
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>

<!-- zpravidla pomocne cesty v arealech, nepristupne -->

<!-- Cyklostezky, zpravidla zpevnene, v realu oznacene zlutymi cedulkami -->
<Layer name="cycleways" srs="&srs900913;">
    <StyleName>cycleway</StyleName>
    <StyleName>cycleway-tunnel</StyleName>
    <Datasource>
        <Parameter name="table">
        (select bicycle, osm_id, route, state, way, tunnel,
        case 
          when bicycle in ('no', '-1', 'false') then 'nobicycle'::text
          when highway='footway' and (bicycle is null or bicycle in ('no', '-1', 'false')) then 'nobicycle'::text

          when motorcar in ('no', 'permissive', 'destination', 'private', 'delivery') then 'low'::text 
          when motor_vehicle in ('no', 'permissive', 'destination', 'private', 'delivery') then 'low'::text 
          when vehicle in ('no', 'permissive', 'destination', 'private', 'delivery') then 'low'::text 
          when access in ('no', 'permissive', 'destination', 'private', 'delivery') then 'low'::text 

          when cycleway in ('lane', 'opposite_lane') then 'low'::text 
          when 'cycleway:left' in ('lane', 'opposite_lane') then 'low'::text 
          when 'cycleway:right' in ('lane', 'opposite_lane') then 'low'::text 
          when highway in ('tertiary', 'primary', 'secondary', 'trunk', 'motorway', 'primary_link', 'secondary_link', 'trunk_link', 'motorway_link', 'tertiary_link') then 'heavy'::text 
          when highway in ( 'unclassified', 'residential', 'road') then 'medium'::text
          else 'low'::text end as traffic,

        case  
          when highway in ('steps') then 'steps'::text 

          when smoothness in ('excellent', 'good') then 'good'::text
          when smoothness in ('intermediate') then 'unpaved'::text 
          when smoothness in ('bad', 'very_bad', 'horrible', 'very_horrible', 'impassable') then 'bad'::text

          when surface in ('paved', 'asphalt', 'concrete', 'concrete:lanes', 'cobblestone:flattened') then 'good'::text 
          when surface in ('unpaved', 'compacted', 'cobblestone', 'concrete:plates', 'grass_paver', 'gravel', 'pebblestone', 'sand') then 'unpaved'::text 
          when surface in ('dirt', 'grass', 'mud') then 'bad'::text 

          when highway in ('cycleway', 'pedestrian', 'living_street', 'footway', 'service', 'road', 'residential', 'primary', 'secondary', 'tertiary', 'unclassified', 'motorway', 'trunk', 'primary_link', 'secondary_link', 'tertiary_link', 'motorway_link', 'trunk_link') then 'good'::text 
          when highway in ('path', 'bridleway') then 'bad'::text 

          when tracktype in ('grade1') then 'good'::text 
          when tracktype in ('grade2', 'grade3') then 'unpaved'::text 
          when tracktype in ('grade4', 'grade5') then 'bad'::text 

          else 'bad'::text end as surface_type
          from planet_osm_cycleway_rels
          where ((cycleway is null and "cycleway:right" is null and "cycleway:left" is null) or not (cycleway in ('lane', 'opposite_lane', 'shared_lane', 'share_busway')
          and "cycleway:right" in ('lane', 'opposite_lane', 'shared_lane', 'share_busway')
          and "cycleway:left" in ('lane', 'opposite_lane', 'shared_lane', 'share_busway')))
        ) as cycleroute
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>

<!-- tramvajove koleje -->
<Layer name="trams" srs="&srs900913;">
<StyleName>trams</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way from planet_osm_line where railway='tram' and (tunnel is null or tunnel not in ('yes','true','1')) and osm_id > 0) as trams
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- zastavky tramvaji, mene vyznamna nadrazi,  -->
<!-- Směrové šipky na cyklotrasách -->
<Layer name="cycleway-directions" srs="&srs900913;">
    <StyleName>cycleway-directions</StyleName>
    <Datasource>
        <Parameter name="table">
        (select bicycle, osm_id, route, state, way, role
        from planet_osm_cycleway_rels
        where (route='bicycle' and role in ('forward', 'backward'))) as cycledirection
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>

<!-- MTB stezky dohromady s KCT znacenim, MTB je stranou -->
<!-- <Layer name="mtboffset" srs="&srs900913;">
    <StyleName>mtb_offset</StyleName>
    <Datasource>
        <Parameter name="table">
        (SELECT osm_id,way,route,name,ref,kct_blue,marked_trail_blue,"mtb:scale",
        char_length(ref) AS length FROM &prefix;_track_rels WHERE
	  (kct_yellow IS NOT NULL or marked_trail_yellow IS NOT NULL or
	  kct_red IS NOT NULL or marked_trail_red IS NOT NULL or
	  kct_green IS NOT NULL or marked_trail_green IS NOT NULL or
	  kct_blue IS NOT NULL OR marked_trail_blue IS NOT NULL) and "mtb:scale" is not null)
        as mtb_offset
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>
 -->
<!-- Pesi znacene trasy KCT -->
<Layer name="yellow-track-text" status="on" srs="&srs900913;">
    <StyleName>yellow-track-text</StyleName>
    <!--<StyleName>yellow-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">
        (select way, route_name
        from planet_osm_line where
        osm_id &lt; 0 and
        ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL))
        ) as yellow_track_text
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="yellow-track" status="on" srs="&srs900913;">
    <StyleName>yellow-track</StyleName>
    <!--<StyleName>yellow-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_yellow,marked_trail_yellow,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NULL) AND (marked_trail_red IS NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NULL) AND (marked_trail_blue IS NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_yellow,marked_trail_yellow,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NULL) AND (marked_trail_red IS NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NULL) AND (marked_trail_blue IS NULL)))) as yellow_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="red-track-text" status="on" srs="&srs900913;">
    <StyleName>red-track-text</StyleName>
    <Datasource>
      <Parameter name="table">
        (select way, route_name
        from planet_osm_line where
        osm_id &lt; 0 and
        ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL))
        ) as red_track_text
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="red-track" status="on" srs="&srs900913;">
    <StyleName>red-track</StyleName>
    <!--<StyleName>red-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_red,marked_trail_red,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NULL) AND (marked_trail_yellow IS NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NULL) AND (marked_trail_blue IS NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_red,marked_trail_red,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NULL) AND (marked_trail_yellow IS NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NULL) AND (marked_trail_blue IS NULL)))) as red_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="green-track-text" status="on" srs="&srs900913;">
    <StyleName>green-track-text</StyleName>
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_green,marked_trail_green,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL))
			      ) UNION
			      (SELECT osm_id,way,route,name,ref,kct_green,marked_trail_green,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL))
			      )) as green_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="green-track" status="on" srs="&srs900913;">
    <StyleName>green-track</StyleName>
    <!--<StyleName>green-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">
        (select way, route_name
        from planet_osm_line where
        osm_id &lt; 0 and
        ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL))
        ) as green_track_text
       </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="blue-track-text" status="on" srs="&srs900913;">
    <StyleName>blue-track-text</StyleName>
    <!--<StyleName>blue-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">
        (select way, route_name
        from planet_osm_line where
        osm_id &lt; 0 and
        ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL))
        ) as blue_track_text
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="blue-track" status="on" srs="&srs900913;">
    <StyleName>blue-track</StyleName>
    <!--<StyleName>blue-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_blue,marked_trail_blue,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NULL) AND (marked_trail_yellow IS NULL)) AND
			      ((kct_red IS NULL) AND (marked_trail_red IS NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_blue,marked_trail_blue,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NULL) AND (marked_trail_yellow IS NULL)) AND
			      ((kct_red IS NULL) AND (marked_trail_red IS NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL)))) as blue_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="yellow-red-track" status="on" srs="&srs900913;">
    <StyleName>yellow-red-track</StyleName>
    <!--<StyleName>yellow-shield</StyleName>-->
    <!--<StyleName>red-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_yellow,kct_red,marked_trail_yellow,marked_trail_red,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NULL) AND (marked_trail_blue IS NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_yellow,kct_red,marked_trail_yellow,marked_trail_red,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NULL) AND (marked_trail_blue IS NULL)))) as yellow_red_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="yellow-green-track" status="on" srs="&srs900913;">
    <StyleName>yellow-green-track</StyleName>
    <!--<StyleName>yellow-shield</StyleName>-->
    <!--<StyleName>green-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_yellow,kct_green,marked_trail_yellow,marked_trail_green,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NULL) AND (marked_trail_red IS NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NULL) AND (marked_trail_blue IS NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_yellow,kct_green,marked_trail_yellow,marked_trail_green,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NULL) AND (marked_trail_red IS NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NULL) AND (marked_trail_blue IS NULL)))) as yellow_green_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="yellow-blue-track" status="on" srs="&srs900913;">
    <StyleName>yellow-blue-track</StyleName>
    <!--<StyleName>yellow-shield</StyleName>-->
    <!--<StyleName>blue-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_yellow,kct_blue,marked_trail_yellow,marked_trail_blue,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NULL) AND (marked_trail_red IS NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_yellow,kct_blue,marked_trail_yellow,marked_trail_blue,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NULL) AND (marked_trail_red IS NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL)))) as yellow_blue_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="red-green-track" status="on" srs="&srs900913;">
    <StyleName>red-green-track</StyleName>
    <!--<StyleName>red-shield</StyleName>-->
    <!--<StyleName>green-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_red,kct_green,marked_trail_red,marked_trail_green,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NULL) AND (marked_trail_yellow IS NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NULL) AND (marked_trail_blue IS NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_red,kct_green,marked_trail_red,marked_trail_green,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NULL) AND (marked_trail_yellow IS NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NULL) AND (marked_trail_blue IS NULL)))) as red_green_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="red-blue-track" status="on" srs="&srs900913;">
    <StyleName>red-blue-track</StyleName>
    <!--<StyleName>red-shield</StyleName>-->
    <!--<StyleName>blue-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_red,kct_blue,marked_trail_red,marked_trail_blue,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NULL) AND (marked_trail_yellow IS NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_red,kct_blue,marked_trail_red,marked_trail_blue,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NULL) AND (marked_trail_yellow IS NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL)))) as red_blue_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="green-blue-track" status="on" srs="&srs900913;">
    <StyleName>green-blue-track</StyleName>
    <!--<StyleName>green-shield</StyleName>-->
    <!--<StyleName>blue-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_green,kct_blue,marked_trail_green,marked_trail_blue,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NULL) AND (marked_trail_yellow IS NULL)) AND
			      ((kct_red IS NULL) AND (marked_trail_red IS NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_green,kct_blue,marked_trail_green,marked_trail_blue,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NULL) AND (marked_trail_yellow IS NULL)) AND
			      ((kct_red IS NULL) AND (marked_trail_red IS NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL)))) as green_blue_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="red-green-blue-track" status="on" srs="&srs900913;">
    <StyleName>red-green-blue-track</StyleName>
    <!--<StyleName>red-shield</StyleName>-->
    <!--<StyleName>green-shield</StyleName>-->
    <!--<StyleName>blue-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_red,kct_green,kct_blue,marked_trail_red,marked_trail_green,marked_trail_blue,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NULL) AND (marked_trail_yellow IS NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_red,kct_green,kct_blue,marked_trail_red,marked_trail_green,marked_trail_blue,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NULL) AND (marked_trail_yellow IS NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL)))) as red_green_blue_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="yellow-green-blue-track" status="on" srs="&srs900913;">
    <StyleName>yellow-green-blue-track</StyleName>
    <!--<StyleName>yellow-shield</StyleName>-->
    <!--<StyleName>green-shield</StyleName>-->
    <!--<StyleName>blue-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_yellow,kct_green,kct_blue,marked_trail_yellow,marked_trail_green,marked_trail_blue,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NULL) AND (marked_trail_red IS NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_yellow,kct_green,kct_blue,marked_trail_yellow,marked_trail_green,marked_trail_blue,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NULL) AND (marked_trail_red IS NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL)))) as yellow_green_blue_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="yellow-red-blue-track" status="on" srs="&srs900913;">
    <StyleName>yellow-red-blue-track</StyleName>
    <!--<StyleName>yellow-shield</StyleName>-->
    <!--<StyleName>red-shield</StyleName>-->
    <!--<StyleName>blue-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_yellow,kct_red,kct_blue,marked_trail_yellow,marked_trail_red,marked_trail_blue,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_yellow,kct_red,kct_blue,marked_trail_yellow,marked_trail_red,marked_trail_blue,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NULL) AND (marked_trail_green IS NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL)))) as yellow_red_blue_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="yellow-red-green-track" status="on" srs="&srs900913;">
    <StyleName>yellow-red-green-track</StyleName>
    <!--<StyleName>yellow-shield</StyleName>-->
    <!--<StyleName>red-shield</StyleName>-->
    <!--<StyleName>green-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_yellow,kct_red,kct_green,marked_trail_yellow,marked_trail_red,marked_trail_green,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NULL) AND (marked_trail_blue IS NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_yellow,kct_red,kct_green,marked_trail_yellow,marked_trail_red,marked_trail_green,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NULL) AND (marked_trail_blue IS NULL)))) as yellow_red_green_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="yellow-red-green-blue-track" status="on" srs="&srs900913;">
    <StyleName>yellow-red-green-blue-track</StyleName>
    <!--<StyleName>yellow-shield</StyleName>-->
    <!--<StyleName>red-shield</StyleName>-->
    <!--<StyleName>green-shield</StyleName>-->
    <!--<StyleName>blue-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">((SELECT osm_id,way,route,name,ref,kct_yellow,kct_red,kct_green,kct_blue,marked_trail_yellow,marked_trail_red,marked_trail_green,marked_trail_blue,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL))) UNION
			      (SELECT osm_id,way,route,name,ref,kct_yellow,kct_red,kct_green,kct_blue,marked_trail_yellow,marked_trail_red,marked_trail_green,marked_trail_blue,char_length(ref) AS length FROM &prefix;_track_rels WHERE
			      ((kct_yellow IS NOT NULL) OR (marked_trail_yellow IS NOT NULL)) AND
			      ((kct_red IS NOT NULL) OR (marked_trail_red IS NOT NULL)) AND
			      ((kct_green IS NOT NULL) OR (marked_trail_green IS NOT NULL)) AND
			      ((kct_blue IS NOT NULL) OR (marked_trail_blue IS NOT NULL)))) as yellow_red_green_blue_track</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>

<!-- Mezinarodni zaceni pesich tras -->
<Layer name="international-track" status="on" srs="&srs900913;">
    <StyleName>international-track</StyleName>
    <Datasource>
      <Parameter name="table">
        ((SELECT osm_id,way,route,name,ref,network,char_length(ref) AS length FROM &prefix;_line WHERE osm_id > 0 AND
	  route='foot' AND (network='e-road' OR network='nwn' OR network='iwn')) UNION
        (SELECT osm_id,way,route,name,ref,network,char_length(ref) AS length from &prefix;_track_rels WHERE
	  route='foot' AND (network='e-road' OR network='nwn' OR network='iwn'))) as international_tacks
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- cyklostezky paralelne s MTB trasami -->
<!--<Layer name="cycleway-mtb" srs="&srs900913;">
    <StyleName>cycleway-mtb</StyleName>
    <Datasource>
        <Parameter name="table">
        (select osm_id,way,route,mtb,"mtb:scale","mtb:scale:uphill", network
        from planet_osm_track_rels
        where ("mtb:scale" is not null or
        "mtb:scale:uphill" is not null or route='mtb')) as cyclewaymtb
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>-->
<!-- Zakladni MTB stezky -->
<Layer name="mtbasic" srs="&srs900913;">
    <StyleName>mtb_basic</StyleName>
    <Datasource>
        <Parameter name="table">
        (select osm_id,way,route,"mtb:scale","mtb:scale:uphill", network
        from planet_osm_line
        where ("mtb:scale" is not null or
        "mtb:scale:uphill" is not null or route='mtb')) as mtb_basic
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>
<!-- MTB znacky klasifikace terenu -->
<Layer name="nobicycle" srs="&srs900913;">
    <StyleName>nobicycle</StyleName>
    <Datasource>
        <Parameter name="table">
        (select osm_id,way, access,
        case when access in ('destination', 'permissive', 'forestry', 'delivery', 'agricultural')
        or vehicle in ('destination', 'permissive', 'forestry', 'delivery', 'agricultural') then 'destination' else 'no_access' end as access_mode
        from planet_osm_line
        where (((((access in ('no', 'destination', 'permissive', 'private', 'forestry', 'delivery', 'agricultural') 
        or (vehicle in ('no', 'destination', 'permissive', 'private', 'forestry', 'delivery', 'agricultural')))
        and (bicycle is null or not (bicycle = 'yes'))) or bicycle in ('no', '-1', 'false')) 
        and (not highway in ('footway'))) 
        or ((highway in ('motorway','motorway_link') 
        or (motorroad='yes'))
        and (bicycle is null or bicycle not in ('yes','designated', '1', 'true'))))
        ) as nobicycle
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>
<Layer name="mtbincline" srs="&srs900913;">
    <StyleName>mtb_incline</StyleName>
    <Datasource>
        <Parameter name="table">
        (select osm_id,way,
        case 
           when incline like E'-%\\%' then 'down'
           when incline like E'%\\%' then 'up' 
           else incline end as incline,
        case 
           when (to_number(substring(incline from E'-*(.*)\\%'), 'S9999') > 10) then 'yes'
           else incline_steep end as incline_steep
        from planet_osm_line)
         as mtb_incline
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>
<!--<Layer name="mtb5" srs="&srs900913;" clear_label_cache="yes">
    <StyleName>mtb_shield5</StyleName>
    <Datasource>
        <Parameter name="table">
        (select osm_id,way
        from planet_osm_line
        where ("mtb:scale" is not null or
        "mtb:scale:uphill" is not null or route='mtb') and "mtb:scale" in ('5','5+','5-')) as mtb_basic
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>
<Layer name="mtb4" srs="&srs900913;">
    <StyleName>mtb_shield4</StyleName>
    <Datasource>
        <Parameter name="table">
        (select osm_id,way
        from planet_osm_line
        where ("mtb:scale" is not null or
        "mtb:scale:uphill" is not null or route='mtb') and "mtb:scale" in ('4','4+','4-')) as mtb_basic
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>
<Layer name="mtb3" srs="&srs900913;">
    <StyleName>mtb_shield3</StyleName>
    <Datasource>
        <Parameter name="table">
        (select osm_id,way
        from planet_osm_line
        where ("mtb:scale" is not null or
        "mtb:scale:uphill" is not null or route='mtb') and "mtb:scale" in ('3','3+','3-')) as mtb_basic
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>
<Layer name="mtb2" srs="&srs900913;">
    <StyleName>mtb_shield2</StyleName>
    <Datasource>
        <Parameter name="table">
        (select osm_id,way
        from planet_osm_line
        where ("mtb:scale" is not null or
        "mtb:scale:uphill" is not null or route='mtb') and "mtb:scale" in ('2','2+','2-')) as mtb_basic
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>
<Layer name="mtb1" srs="&srs900913;">
    <StyleName>mtb_shield1</StyleName>
    <Datasource>
        <Parameter name="table">
        (select osm_id,way
        from planet_osm_line
        where ("mtb:scale" is not null or
        "mtb:scale:uphill" is not null or route='mtb') and "mtb:scale" in ('1','1+','1-')) as mtb_basic
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>
<Layer name="mtb0" srs="&srs900913;">
    <StyleName>mtb_shield0</StyleName>
    <Datasource>
        <Parameter name="table">
        (select osm_id,way
        from planet_osm_line
        where ("mtb:scale" is not null or
        "mtb:scale:uphill" is not null or route='mtb') and "mtb:scale" in ('0','0+')) as mtb_basic
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>-->

<!-- zpravidla pomocne cesty v arealech, nepristupne -->
<Layer name="access" srs="&srs900913;">
<StyleName>access</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,access,highway,bicycle from planet_osm_line where access is not null) as access
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
&layer-amenity-stations;
<!-- elektricke vedeni -->
<Layer name="power" srs="&srs900913;">
<StyleName>power</StyleName>
    <Datasource>
      <Parameter name="table">(select way from planet_osm_line where "power"='line') as power</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- stozary elektrickeho vedeni -->
<Layer name="power_towers" srs="&srs900913;">
<StyleName>power_towers</StyleName>
    <Datasource>
      <Parameter name="table">(select way from planet_osm_point where power='tower') as power_towers</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- smerove sipky jednosmerek -->
<Layer name="directions" srs="&srs900913;">
<StyleName>directions</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,
       case when oneway in ('yes','true','1') then 'yes'::text else oneway end as oneway
       from planet_osm_line
       where oneway is not null
         and (highway is not null or railway is not null or waterway is not null)
         and not highway in ('construction', 'proposed')
      ) as directions
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="bicycle_directions" srs="&srs900913;">
   <StyleName>bicycle_directions</StyleName>
   <Datasource>
      <Parameter name="table">
         (select way, "oneway:bicycle",
       case when oneway in ('yes','true','1') then 'yes'::text else oneway end as oneway,
       case when cycleway in ('opposite', 'opposite_lane') or "oneway:bicycle" in ('no','false') then 'opposite'::text end as cycleway
         from planet_osm_line
       where (oneway is not null) and ((cycleway is not null) or ('oneway:bicycle' is not null))
         and (highway is not null or railway is not null or waterway is not null)
      ) as bicycle_directions
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>

<!-- administrativni hranice
admin 0 - nemecke obvody
admin 1 - nemecke obvody
admin 2 - staty
admin 3 - nejake nemecke obvody
admin 4 - kraje 
 -->
<Layer name="admin-01234" srs="&srs900913;" clear_label_cache="yes">
<StyleName>admin-01234</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,admin_level
       from planet_osm_roads
       where "boundary"='administrative'
         and admin_level in ('2', '3')
       ) as admin</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- administrativni hranice
admin 5 - nemecke obvody
admin 6 - okresy
admin 7 - okresy dalsi
admin 8 - uzemi samostatnych obci
 -->
<!-- <Layer name="admin-5678" srs="&srs900913;">
<StyleName>admin-5678</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,admin_level
       from planet_osm_roads
       where "boundary"='administrative'
         and admin_level in ('6','7')
       ) as admin</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
 -->

<!-- popisy cest pro zoom 13 a vic, cisla a nazvy -->
<Layer name="planet roads text osm" srs="&srs900913;">
<StyleName>roads-text</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway,aeroway,ref,admin_level,char_length(ref) as length,
       case when short_name is not null then short_name else name end as name,
       case when bridge in ('yes','true','1') then 'yes'::text else bridge end as bridge,
       case when (NOT EXISTS (SELECT
               * FROM planet_osm_cycleway_rels WHERE planet_osm_cycleway_rels.osm_id =
               planet_osm_line.osm_id))
               then 'no'::text else 'yes'::text end as cycleway
       from planet_osm_line
       where waterway IS NULL
         and leisure IS NULL
         and landuse IS NULL
         and admin_level IS NULL
         and (name is not null or ref is not null)
         and not highway='construction'
      ) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- jmena mestskych casti, malych obci, samot, pojmenovanych lokalit -->
<Layer name="placenames-small" srs="&srs900913;" clear_label_cache="yes">
<StyleName>suburb</StyleName>
<StyleName>village</StyleName>
<StyleName>hamlet</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,place,name
      from planet_osm_point
      where place in ('suburb','village','large_village','hamlet','locality')
      ) as placenames</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- symboly mest, mensich mest v malych zoomech -->
<Layer name="placenames-medium-symbols" srs="&srs900913;" clear_label_cache="yes">
<StyleName>town-symbols</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,place,population
      from planet_osm_point
      where place in ('city','metropolis','town','large_town','small_town')
        and (capital is null or capital&lt;&gt;'yes')
      order by population desc) as placenamessymbols</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- jmena mest, mensich mest -->
<Layer name="placenames-medium" srs="&srs900913;" clear_label_cache="yes">
<StyleName>town</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,place,upper(name),name,population
      from planet_osm_point
      where place in ('city','metropolis','town','large_town','small_town')
        and (capital is null or capital&lt;&gt;'yes')
      order by population) as placenames</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- jmena zemi, kraju, hlavnich mest -->
<Layer name="placenames-large" srs="&srs900913;" clear_label_cache="yes">
<StyleName>country</StyleName>
<StyleName>state</StyleName>
<StyleName>capital</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,place,upper(name),name,ref
      from planet_osm_point
      where place in ('country','state')
         or (place in ('city','metropolis','town') and capital='yes')
      ) as placenames</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- zajimave body - zastavky autobusu, hrady, zamky, kostely, skoly, obchody, letiste, vrcholy, rozcesti, parkoviste -->
<Layer name="amenity" status="on" srs="&srs900913;" clear_label_cache="yes">
    <StyleName>symbols</StyleName>
    <StyleName>points</StyleName>
    <Datasource>
      <Parameter name="table">(select * from &prefix;_point where barrier IS NOT NULL or amenity IS NOT NULL or tourism is NOT NULL or information is NOT NULL or railway is NOT NULL or "natural" is NOT NULL or highway is NOT NULL or aeroway is NOT NULL or aerialway is NOT NULL or power_source is NOT NULL or man_made is NOT NULL or shop is NOT NULL or historic is NOT NULL or ruins='yes') as amenity</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<Layer name="amenity-poly" status="on" srs="&srs900913;">
    <StyleName>symbols-poly</StyleName>
    <StyleName>points</StyleName>
    <Datasource>
      <Parameter name="table">(select * from &prefix;_polygon where barrier IS NOT NULL or amenity IS NOT NULL or tourism is NOT NULL or information is NOT NULL or railway is NOT NULL or "natural" is NOT NULL or highway is NOT NULL or aeroway is NOT NULL or aerialway is NOT NULL or man_made is NOT NULL or shop is NOT NULL or historic is NOT NULL or ruins='yes') as amenity</Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- popisy cest pro zoom 10-12, zejmena cisla-->
<!--<Layer name="planet roads text osm low zoom" srs="&srs900913;">
<StyleName>roads-text-low-zoom</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,highway,ref,char_length(ref) as length
       from planet_osm_roads
       where highway in ('motorway','trunk','primary')
         and ref is not null
      ) as roads
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer> -->
<!-- popisy zajimavych bodu - amenity -->
<Layer name="text" srs="&srs900913;">
<StyleName>text</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,amenity,highway,leisure,landuse,man_made,"tower:type","natural",place,tourism,information,ele,historic,ruins,name,ref,shop,military,aeroway,'yes'::text as point
       from planet_osm_point
       where amenity is not null
          or leisure is not null
          or landuse is not null
          or tourism is not null
	  or information is not null
          or "natural" is not null
          or man_made in ('lighthouse','windmill')
          or place='island'
          or highway='motorway_junction'
          or military='danger_area'
          or aeroway='gate'
          or shop='bicycle'
          or historic is not null
          or ruins='yes'
      ) as text
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- popisy zajimavych bodu zaznamenanych jako polygon - amenity -->
<Layer name="text-poly" srs="&srs900913;">
<StyleName>text-poly</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,aeroway,amenity,highway,leisure,landuse,man_made,"tower:type","natural",place,tourism,historic,ruins,NULL as ele,ref,shop,military,'no'::text as point,
       case when short_name is not null then short_name else name end as name
       from planet_osm_polygon
       where amenity is not null
          or leisure is not null
          or landuse is not null
          or tourism is not null
          or "natural" is not null
          or man_made in ('lighthouse','windmill')
          or place='island'
          or military='danger_area'
          or shop='bicycle'
          or historic is not null
          or ruins='yes'
      ) as text
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
<!-- popisy arealu - vodni plochy, zoo, vozovny, parky, ale i katastralni uzemi -->
<Layer name="area-text" srs="&srs900913;">
<StyleName>area-text</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,way_area,landuse, "natural",
       case when short_name is not null then short_name else name end as name
       from planet_osm_polygon
       where name is not null
         and (waterway is null or waterway &lt;&gt; 'riverbank')
         and admin_level is null
       order by z_order,way_area desc
      ) as text
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>

<!-- popisy znacenych cyklostezek -->
<Layer name="cycleway-name" status="on" srs="&srs900913;">
    <StyleName>cycleway-name</StyleName>
    <!--<StyleName>yellow-shield</StyleName>-->
    <Datasource>
      <Parameter name="table">
        (select way, route_name
        from planet_osm_line where
        osm_id &lt; 0 and
        ref is not null and (lcn is not null or ncn is not null or rcn is not null)
        ) as cycleway_name
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>

<Layer name="cycleway-text" srs="&srs900913;">
    <StyleName>cycleway-text</StyleName>
    <Datasource>
        <Parameter name="table">
        (select way, ref, name, state,
        case when ref in ('A1  ','A2  ') then 'yes'::text
        when ref in ('PAN  ') then ''::text else ncn end as ncn,
        case when ref in ('A1  ','A2  ', 'PAN  ') then ''::text else rcn end as rcn,
        case when ref in ('PAN  ') then ''::text else lcn end as lcn
        from planet_osm_line
        where ref is not null and (lcn is not null or ncn is not null or rcn is not null)) as cycleway_text
        </Parameter>
        &datasource-settings;
    </Datasource>
</Layer>

<!-- hranice narodnich parku -->
<Layer name="misc_boundaries" srs="&srs900913;">
<StyleName>boundary</StyleName>
    <Datasource>
      <Parameter name="table">
      (select way,name from planet_osm_polygon where boundary='national_park') as boundary
      </Parameter>
      &datasource-settings;
    </Datasource>
</Layer>
</Map>
